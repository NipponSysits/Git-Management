<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<meta name="description" content="">
<meta name="author" content="Mr.Kunanek Thongkam">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<title>PGM MANAGEMENT</title>

<link rel="shortcut icon" href="/libs/icon/debugger-16.png">
<link rel="apple-touch-icon" sizes="57x57" href="/libs/icon/debugger-57.png">
<link rel="apple-touch-icon" sizes="72x72" href="/libs/icon/debugger-72.png">
<link rel="apple-touch-icon" sizes="144x144" href="/libs/icon/debugger-144.png">

<!--[if IE 9]><script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
<script language="javascript" src="/libs/js/vendor/jquery.min.js"></script>
<script language="javascript" src="/libs/js/vendor/jquery.cookie.js"></script>
<script language="javascript" src="/libs/js/vendor/md5.min.js"></script>
<script language="javascript" src="/libs/js/vendor/db.js"></script>
<script language="javascript" src="/libs/js/vendor/respond.min.js"></script>
<script language="javascript" src="/libs/js/vendor/URI.min.js"></script>
<script language="javascript" src="/libs/js/vendor/semantic.min.js"></script>
<link rel="stylesheet" href="/libs/css/webfont/stylesheet.css" type="text/css">
<link rel="stylesheet" href="/libs/css/semantic.min.css" type="text/css">
<link rel="stylesheet" href="/libs/css/app.css" type="text/css">
<script language="javascript" src="/libs/js/touno.engine.js"></script>
<script language="javascript" src="/libs/js/app.js"></script>

<script type="text/javascript">
$(function(){

  var MenuSelected = function(e){
    $('.ui.access.grid > .row.user-menu > .ui.item').removeClass('selected');
    $('.ui.access.grid .dropdown.profile .item.profile').removeClass('selected');
    $(e).addClass('selected');
  }

  $.fn.avatar = function(email, size){
    size = size || 256;
    var url = 'http://www.gravatar.com/avatar/'+md5(email || none)+'?d=mm&s='+size;
    return $(this).css('background-image',"url('"+url+"')");
  }

  $.fn.MenuActiveClick = function(com, mod){
    if (!$(this).hasClass('selected')) {
      MenuSelected(this);
      T.SetState(com, mod);
      var text, item;
      switch(com){
        case 'Sysits':
            text = 'Nippon Sysits';
            item = [
              { text: 'Dashboard', state: function(){ T.SetState('Sysits'); }, active: true },
              { text: 'TimeCard', state: function(){ T.SetState('Sysits', 'Time-Card'); } },
              { text: 'Stats', state: function(){ T.SetState('Sysits', 'Time-Stats'); }, },
              { text: 'Daily Report', state: function(){ T.SetState('Sysits', 'Report'); }, }
            ]
          break;
        case 'Setting':
            text = 'Setting Systems';
            item = [
              { text: 'Systems', state: function(){ T.SetState('Setting'); }, active: true }
            ]
          break;
        default:
          text = 'Management';
          item = [
            { text: 'Dashboard', state: function(){ T.SetState(); }, active: true },
            { text: 'Repositories', state: function(){ T.SetState('Repository'); }, }
          ]
          break;
      }
      SetPanelMenu(text, item);
    }
  }

  $.fn.MenuDropdownctiveClick = function(com, mod){
    if (!$('.ui.access.grid .dropdown.profile').hasClass('selected')) {
      MenuSelected('.ui.access.grid .dropdown.profile');
      T.SetState(com, mod);
      SetPanelMenu('Profile Account', [
        { text: T.User.username, state: function(){ T.SetState('User', T.User.username); }, active: true },
        { text: 'Account Setting', state: function(){ T.SetState('User', 'Account-Setting'); } },
        { text: 'Notifications', state: function(){ T.SetState('User', 'Notify'); }, }
      ]);
    }
  }

  $.fn.Menu = function(item){
    if (!$(this).hasClass('active')) {
      $('.ui.navigator.menu .item.active').removeClass('active');
      $(this).addClass('active');
      item.state();
      // T.HTML('.ui.panel.main.container > .ui.panel.html .ui.main-component', com).then(function(){
      //   console.log('change');
      //   // $('.ui.dimmer.prepare').transition('fade');
      //   // $('.ui.panel.main.container').transition('fade', '100ms'); 
      //   // $('.ui.access.grid').show();
      //   // onButton.SignIn = false;
      // });
    }
  }

  var SetPanelMenu = function(h3, menu){
    $('.column.navigator.text > h3').html(h3);
    $('.ui.navigator.menu').empty();

    menu.map(function(item){
      $('<a>', { 
        'class':'item'+(item.active?' active':''),
        'onClick': "$(this).Menu($(this).data('item'))",
        'html':item.text
      }).data('item', item).appendTo('.ui.navigator.menu');
    });
  }


  var exModal = function(ex) {
    var uiEX = '.ui.modal.feature-exception';
    $('.ui.dimmer.prepare').hide();
    $(uiEX).modal({ closable: false, duration: 0 });
    $('.ui.button.refresh-exception').click(function(){
      location.reload();
    });

    if (ex instanceof CallbackException) {
      $(uiEX+' div.description>p').html(ex.exMessage);
      $(uiEX+' div.header').html(ex.exTitle);
    } else {
      $(uiEX+' div.description>p').html(ex);
      $(uiEX+' div.header').html("Exception fail.");
    }
    $(uiEX).modal('show');  
  }
  
  $.when(
    T.Init('<%= _SESSION.ID %>'),
    (function(){ // Prepare client feature.
      window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      window.origin = '<%= _HOST %>' || window.location.origin;

      var feature = $.Deferred();
      if (localStorage == undefined) {
          feature.reject(new CallbackException("<%= _LANG.EXCEPTION.LOCALSTORAGE_TITLE %>", "<%= _LANG.EXCEPTION.LOCALSTORAGE_DESC %>"));
      } else if (console == undefined) {
          feature.reject(new CallbackException("<%= _LANG.EXCEPTION.CONSOLE_TITLE %>", "<%= _LANG.EXCEPTION.CONSOLE_DESC %>"));
      } else if (document.cookie == undefined) {
          feature.reject(new CallbackException("<%= _LANG.EXCEPTION.COOKIE_TITLE %>", "<%= _LANG.EXCEPTION.COOKIE_DESC %>"));
      } else if (window.indexedDB == undefined) {
          feature.reject(new CallbackException("<%= _LANG.EXCEPTION.INDEXED_TITLE %>", "<%= _LANG.EXCEPTION.INDEXED_DESC %>"));
      } else if (History == undefined) {
          feature.reject(new CallbackException("<%= _LANG.EXCEPTION.HISTORY_TITLE %>", "<%= _LANG.EXCEPTION.HISTORY_DESC %>"));
      } else if (/MSIE 5.0|MSIE 5.5|MSIE 6.0|MSIE 7.0|MSIE 8.0/g.exec(navigator.userAgent)) {
          feature.reject(new CallbackException("<%= _LANG.EXCEPTION.IE9_TITLE %>", "<%= _LANG.EXCEPTION.IE9_DESC %>"));
      } else {
          feature.resolve({ feature: true }); 
      }
      return feature.promise();
    })(),
    (function(){ 
      var session = $.Deferred();
      if("<%= _SESSION.NAME %>" !== "") session.reject(new CallbackException("<%= _SESSION.NAME %>", "<%= _SESSION.MESSAGE %>")); 
      session.resolve({ feature: true }); 
      return session.promise();
    })()
  ).fail(exModal).done(function (i, f, s) {
    var ex = new CallbackException(f);
    if(!ex.onError) {
      if(T.Storage('SESSION_CLIENT')) {
        T.Call({ url: '/api/sign-access', data: { email: T.Storage('signin-username') } }).then(function(e, res){
          if(res.access) onAccess(res.user); else onSignOut();
        });
      } else {
        onSignOut();
      }
    } else {
      exModal(ex); 
    }
  });

  var onAccess = function(user){
    T.User = user;
    if(State.Component == 'Sysits') {
      $('.ui.access.grid > .row.user-menu > .ui.item.nippon').MenuActiveClick(State.Component);
    } else if(State.Component == 'Setting') {
      $('.ui.access.grid > .row.user-menu > .ui.item.setting').MenuActiveClick(State.Component);
    } else if(State.Component == 'User') {
      $('.ui.access.grid .dropdown.profile .item.profile').MenuDropdownctiveClick(State.Component, State.Module);
    } else {
      $('.ui.access.grid > .row.user-menu > .ui.item.home').MenuActiveClick();
    }

    $('.user-menu .item.profile .user-image').avatar(T.User.email, 64);
    $('.user-menu .item.profile .ui.fullname').html(T.User.fullname);
    $('.user-menu .item.profile .ui.position').html(T.User.position);
    // $('.ui.dimmer.component').transition('hide'); 
    if(!State.Component) {
      T.HTML('.ui.panel.main.container > .ui.panel.html .ui.main-component', 'dashboard').then(function(){
        $('.ui.dimmer.prepare').transition('fade');
        $('.ui.panel.main.container').transition('fade', '100ms'); 
        $('.ui.access.grid').show();
        onButton.SignIn = false;
      });
    } else {
      $('.ui.dimmer.prepare').transition('fade');
      $('.ui.panel.main.container').transition('fade', '100ms'); 
      $('.ui.access.grid').show();
      onButton.SignIn = false;
    }

  }

  var onPermission = function(){

  }

  var onSignOut = function(){
    // $('.ui.dimmer.component').transition('hide');
    $('.ui.dimmer.prepare').fadeOut(300);
    $('.ui.panel.sign-in').fadeIn(300);
    $('.ui.access.grid').hide();
  }

  var eventRememberSignIn = function(email) {
    $('.ui.sign-avartar').avatar(email, 256);
    $('.ui.sign-email').html(email);
    $('.ui.button.sign-in').css({ 'border-radius': 2 });
    $('.ui.button.sign-back, .or.sign-or').show();
  }
  
  var eventBackSignIn = function() {
    $('.ui.button.sign-in').css({ 'border-radius': 0 });
    $('.ui.button.sign-back, .or.sign-or').hide();
  }

  var eventSignInWait = function(){
    $('.ui.sign-in.button').removeClass('positive green').addClass('loading');
    $('.fields.username, .fields.remember, .fields.password, .ui.button.sign-back').addClass('disabled');
  }
  var eventSignInSuccess = function(){
    $('.fields.username, .fields.remember, .fields.password, .ui.button.sign-back').removeClass('disabled');
    $('.ui.sign-in.button').addClass('positive green');
  }

  $('.user-menu > .item.profile').dropdown();
  $('.login-image').height($(window).height() - 118); 
  $(window).resize(function(){ $('.login-image').height($(window).height() - 118); });

  T.SetComponent(function(com){
    com = !com ? 'dashboard' : com.toLowerCase()
    //$('.ui.dimmer.component').transition('fade','100ms'); 
    T.HTML('.ui.panel.main.container > .ui.panel.html .ui.main-component', com).then(function(){
      //$('.ui.dimmer.component').transition('fade','100ms'); 
    });
  });
      
  // Remember Event
  $('.ui.remember-id').checkbox(T.Storage('signin-remember-id') || 'uncheck');
  $('.ui.remember-id').checkbox({
    onChange: function(){
      T.Storage('signin-remember-id', ($(this).prop('checked') ? 'check': 'uncheck'));
    }
  });
  if(T.Storage('signin-remember-id') == 'check' && T.Storage('signin-username')) {
    $('.ui.sign-id').hide()
    $('.ui.sign-image').show();
    eventRememberSignIn(T.Storage('signin-username'));
    $('.ui.sign-in.form').form('get field','email').val(T.Storage('signin-username'));
  } else {
    eventBackSignIn();
  }

  $('.ui.button.sign-back').click(function(){
    $('.ui.sign-image').transition('remove looping').transition({ 
      animation: 'fade left', 
      onComplete: function(){
        $('.ui.sign-id').transition('fade left');
      }
    });
    eventBackSignIn();
  });
  var onButton = { SignIn: false, SignOut: false, Nav: true };
  $('.ui.sign-in.form').form({
    inline : true,
    on     : 'blur',
    fields: {
      email: {
        identifier: 'email',
        rules: [
          { type: 'empty', prompt: 'Please enter your e-mail again' },
          { type: 'email', prompt: 'Please enter a valid e-mail' }
        ]
      },
      password: {
        identifier: 'password',
        rules: [
          { type: 'empty', prompt: 'Please enter your password again' },
          { type: 'length[6]', prompt: 'Your password must be at least 6 characters' }
        ]
      }

    },
    onInvalid: function() {
      $('div.ui.panel.sign-in div.ui.basic.prompt.label').each(function(i, e){
        if(!$(e).hasClass('pointing below')) $(e).removeClass('pointing').addClass('pointing below');
      });

    },
    onValid: function(){
     
    },
    onSuccess: function(event, fields){
      eventSignInWait();
      if(!onButton.SignIn) {
        onButton.SignIn = true;
        T.Call({ url:'/api/sign-in', data: fields }).then(function(e, res){
          $('.ui.sign-in.button').removeClass('loading');
          if (!e.onError) {
            // display: "Kananek T.", email: "kem@ns.co.th"
            $('.ui.sign-in.form').form('get field','password').val('');
            $('.ui.dimmer.prepare').transition('fade');
            $('.ui.panel.sign-in').fadeOut(300, function(){
              onAccess(res.user, 'dashboard');
              eventSignInSuccess();
            });
          } else {
            eventSignInSuccess();
            $('.ui.access.grid').hide();
            if(!res.name) {
              //console.log('username fail');
              $('.fields.username').addClass('error');
              $('.ui.sign-in.form').form('get field','email').focus();
            }
            if(!res.pass) {
              //console.log('password fail');
              $('.fields.password').addClass('error');
              $('.ui.sign-in.form').form('get field','password').val('').focus().blur().focus();
            }

          }

          if(res.name && $('.ui.sign-image').css('display') == 'none') {
            T.Storage('signin-username', $('.ui.sign-in.form').form('get field','email').val());
            $('.ui.sign-id').transition('remove looping').transition({ 
              animation: 'fade right', 
              onComplete: function(){
                $('.ui.sign-image').transition('fade right');
              }
            });
            eventRememberSignIn($('.ui.sign-in.form').form('get field','email').val());
          }


        });
      }
      return false;
    },
    onFailure: function(){ 
      return false; 
    }
  });


  $('.ui.access.grid > .row.user-menu > .ui.item.home').click(function(){ 
    $(this).MenuActiveClick();
  });
  $('.ui.access.grid > .row.user-menu > .ui.item.nippon').click(function(){ 
    $(this).MenuActiveClick('Sysits'); 

  });
  $('.ui.access.grid > .row.user-menu > .ui.item.setting').click(function(){ 
    $(this).MenuActiveClick('Setting'); 

  });  
  $('.ui.access.grid .dropdown.profile .item.profile').click(function(){ 
    $(this).MenuDropdownctiveClick('User', 'dvgamer'); 

  });

  $('.ui.access.grid .dropdown.profile .item.signout').click(function(){
    $('.signout.modal').modal({
      closable  : false,
      onDeny : function() {
        if(!onButton.SignOut) {
          onButton.SignOut = true;
          $('.signout.modal .actions .ok.button').addClass('disabled');
          $('.signout.modal .actions .negative.button').addClass('loading');
          T.Call({ url:'/api/sign-out' }).then(function(e, res){
            T.SetState();
            $('.signout.modal .actions .ok.button').removeClass('disabled');
            $('.signout.modal .actions .negative.button').removeClass('loading');
            if(!e.onError) {
              $('.signout.modal').modal('hide');
              $('.ui.access.grid').hide();
              $('.ui.panel.main.container').removeClass('transition visible');
              $('.ui.panel.main.container').fadeOut(100, function(){ 
                $('.ui.panel.sign-in').fadeIn(300); 
                onButton.SignOut = false;
              }); 
            } else {
              onButton.SignOut = false;
            }
          });
        }
        return false;
      }
    }).modal('show');
  });
  // var ctx = document.getElementById('login-image').getContext('2d');
  // var text = ctx.measureText("foo"); // TextMetrics object
  // text.width; // 16;
});
</script>
</head>
<body data-whatinput-formtyping>
<div class="main">
    <div class="header">
      <div class="ui prepare dimmer active">
        <div class="ui large text loader">Loading</div>
      </div>

      <div class="ui attached menu top">
        <div class="header">
          <div style="background-image: url('/libs/img/pgm.management.png'); background-position: 0px 0px; background-repeat: no-repeat; background-size: cover; width:200px; height: 39px; margin: 8px 10px;">
            <div class="ui small signout modal">
              <div class="header">
                PGM-Management
              </div>
              <div class="content">
                <p>Are you sure you want to sign-out your account</p>
              </div>
              <div class="actions">
                <div class="ui ok button">
                  Cancel
                </div>
                <div class="ui negative right labeled icon button">
                  Signout
                  <i class="checkmark icon"></i>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="ui access grid" style="display:none;display:flex;margin-left:auto!important;">
          <div class="computer tablet only row user-menu">
            <a class="ui item home">
              <i class="git square icon big"></i>
            </a>
            <a class="ui item nippon">
              <i class="nippon icon big"></i>
            </a>
            <a class="ui item setting">
              <i class="setting icon big"></i>
            </a>
            <div class="ui dropdown icon item profile">
              <a class="ui item user">
                <i class="user-image icon big"></i>
              </a>
              <div class="content">
                <div class="ui fullname sub header"></div>
                <div class="ui position"></div>
              </div>
              <div class="menu">
                <div class="item profile">
                  <i class="user icon"></i>
                  Profiles
                </div>
                <div class="divider"></div>
                <div class="item signout">
                  <i class="sign out icon"></i>
                  Sign out
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>
    <div class="ui content">
      <div class="ui notify nag" style="position: absolute;top: 55px;backround-color:rgba(184, 11, 11, 0.79);">
        <span class="title"></span>
        <i class="close icon"></i>
      </div>
      <div class="ui panel main container" style="display:none;">     
        <div class="ui dimmer component inverted"><div class="ui text loader"></div></div>
        <div class="ui panel html">
          <%- include component/menu-panel %>
        </div>
      </div>
      <div class="ui panel sign-in" style="display:none;">
        <div class="ui equal width stackable grid " style="margin:0px;">
          <div class="column login-image" style="background-image: url('/libs/img/login.jpg'); background-position: 0px 0px; background-repeat: no-repeat; background-size: cover; background-position: left center;"></div>
          <!-- <canvas id="login-image" class="column login-image"></canvas> -->
          <div class="ui column centered grid">
            <div class="column" style="max-width: 350px; padding-top:80px;">
              <h2>Sign In</h2>
              <form class="ui large form sign-in">
                  <div class="ui column" style="max-height:170px;">
                    <div class="ui sign-image centered grid" style="position:relative; display:none;">
                      <div class="column" style="max-width: 156px; text-align:center;">
                        <div class="ui circular image sign-avartar"  style="background-size:cover;width:128px;height:128px;"></div>
                        <h3 class="ui sign-email" style="margin-top: 5px;"></h3>
                      </div>
                    </div>
                    <div class="ui sign-id" style="position:relative;">
                      <h4>Sign-In ID</h4>
                      <div class="username field">
                        <div class="ui left icon input">
                          <i class="user icon"></i>
                          <input type="text" id="email" name="email" placeholder="E-mail address">
                        </div>
                      </div>
                      <div class="remember field">
                        <div class="ui checkbox remember-id">
                          <input type="checkbox" id="remember-id" name="remember-id">
                          <label>Remember My Sign-In ID</label>
                        </div>
                      </div>
                    </div>
                  </div>
                  <h4>Password</h4>
                  <div class="password field">
                    <div class="ui left icon input">
                      <i class="lock icon"></i>
                      <input type="password" id="password" name="password" placeholder="Password">
                    </div>
                  </div>
                  <div class="ui buttons column" style="width:100%">
                    <div class="ui sign-back button large" style="max-width:83px;">Back</div>
                    <div class="or sign-or"></div>
                    <div class="ui positive sign-in large submit button">Login</div>
                  </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="ui sign-in message ui error message hidden" style="position:absolute; top:0px;">
      <i class="close icon"></i>
      <div class="header">There was some errors with your submission</div>
      <ul class="list"></ul>
    </div>


    <div class="ui basic modal feature-exception">
      <div class="header"></div>
      <div class="image content">
        <div class="image">
          <i class="bug icon"></i>
        </div>
        <div class="description">
          <p></p>
        </div>
      </div>
      <div class="actions">
        <div class="ui inverted buttons">
          <div class="ui red basic inverted button refresh-exception">
            <i class="refresh icon"></i>
            Reload
          </div>
        </div>
      </div>
    </div>
    <div class="footer">
        <i class="icon copyright"></i>Touno-K.com Copyright. Designed by <strong>Mr.Kananek Thongkam</strong></a>
    </div>
</div>
<script language="javascript" src="/libs/js/vendor/what-input.min.js"></script>
</body>
</html>